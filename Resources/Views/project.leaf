<!DOCTYPE html>
<html>
<head>
    <title>Concord Business Services Time Billing System</title>
    <meta charset="UTF-8" />
    <link rel="stylesheet" href="./css/jquery-ui-1.9.0.custom.min.css" />
    <link rel="stylesheet" href="./css/jquery.dataTables.css" />
    <link rel="stylesheet" href="./css/concordtb.css" />
    <script language="javascript" type="text/javascript"  src="https://code.jquery.com/jquery-1.8.2.min.js"></script>
    <script language="javascript" type="text/javascript" src="https://code.jquery.com/ui/1.9.0/jquery-ui.min.js"></script>
    <!--script language="javascript" src="./js/jquery.validate.pack.js"></script-->
    <script src="./highcharts/code/highcharts.js"></script>
    <script src="./highcharts/code/highcharts-more.js"></script>
    <script src="./highcharts/code/modules/solid-gauge.js"></script>
    <style>
        .wrapper {display: grid; grid-template-columns: repeat(12, [col-start] 1fr); grid-gap: 20px; }
        .grid-1-1 {grid-column: col-start 1 / span 6; }
        .grid-1-2 {grid-column: col-start 7 / span 6; grid-row: 1;}
        .grid-2-1 {grid-column: col-start 1 / span 6; grid-row: 2;}
        .grid-2-2 {grid-column: col-start 7 / span 6; grid-row: 2;}
        .grid-3-1 {grid-column: col-start 1 / span 6; grid-row: 3;}
        .grid-3-2 {grid-column: col-start 7 / span 6; grid-row: 3;}
        .grid-4-1 {grid-column: col-start 1 / span 4; grid-row: 4;}
        .grid-4-2 {grid-column: col-start 5 / span 2; grid-row: 4;}
        .grid-4-3 {grid-column: col-start 7 / span 3; grid-row: 4;}
        .grid-4-4 {grid-column: col-start 9 / span 3: grid-row: 4;}
        .grid-5-1 {grid-column: col-start 1 / span 4; grid-row: 6;}
        .grid-5-2 {grid-column: col-start 5 / span 4; grid-row: 6;}
        .grid-5-3 {grid-column: col-start 9 / span 3; grid-row: 6 / span 2;}
        .grid-6-1 {grid-column: col-start 1 / span 4; grid-row: 7;}
        .grid-6-2 {grid-column: col-start 5 / span 4; grid-row: 7;}
        .grid-7-1 {grid-column: col-start 1 / span 6; grid-row: 9;}
        .grid-7-2 {grid-column: col-start 7 / span 6; grid-row: 9;}
        .underline-1 {grid-column: col-start 1 / span 12; grid-row: 5; border-bottom: 2px solid #ccc; }
        .underline-2 {grid-column: col-start 1 / span 12; grid-row: 8; border-bottom: 2px solid #ccc; }
        label {float: left; width: 10em; margin-right: 1em; text-align: right; }
        .grid-1-1 select, .grid-1-2 select, .grid-3-1 select {width: 26em;}
        .grid-2-1 input, .grid-2-2 input, .grid-3-2 textarea {width:25.5em; }
        .grid-4-1 input {width: 5em; }
        .journal-head {font-weight: bold; margin-top: 1.25em;}
        .system .journal-head {color: blue}
        .user .journal-head {color: red}
        .journal-entry .notes {margin-top:0.8em; margin-left: 0.8em;}
        .journal-entry {margin-bottom: 1em; border-bottom: 1px solid #ccc; padding-bottom:0.8em;}
        .journal-section {width: 66%; display:inline-block;}
        .rates-section {width: 30%; display:inline-block; margin-left:10px; vertical-align:top;}
        #btnCloseProject, #btnConfirmCloseProject {float:right;}
        #chartProgress{height: 170px;}
        .btnLittleHeader{display: inline; margin-left: 1em; max-height: 17px; padding: 2px;}
        .btnLittleHeader img {object-fit: scale-down;}
        
    </style>
    <script>
    
        function enableDisable(obj, basedOnInput) {
            if (basedOnInput.val().trim() == "") {
                obj.prop('disabled', true);
                obj.addClass('disabled');
                basedOnInput.prev($('label')).addClass('requiredButMissing');
            }
            else {
                obj.prop('disabled', false);
                obj.removeClass('disabled');
                basedOnInput.prev($('label')).removeClass('requiredButMissing');
            }
        }

                
        $(document).ready(function() {
            $('.datepicker').datepicker();
            
            $('#btnSave').button().click(function() {
                $('#frmMain').submit();
            });
            
            $('#btnCloseProject').button().click(function() {
                $('#dlgConfirmCloseProject').dialog('open');
            });
            
            $('#dlgConfirmCloseProject').dialog({
                autoOpen: false,
                title: 'Confirmation',
                width: 515,
                modal : true
            });
            
            $('#description').bind('keyup change', function() {
                enableDisable($('#btnSave'), $('#description'));
            });
            enableDisable($('#btnSave'), $('#description'));
            
            
            $('#btnConfirmCloseProject').button().click(function() {
                $.ajax({
                    url: 'ProjectClose',
                    type: 'post',
                    data: {
                        projectId: #if(project.ProjectID) { #(project.ProjectID) }else{ -1 }
                    },
                    success: function(data, status) {
                        if(data == "ok") {
                            window.top.location.href="/";
                        }
                        else {
                            console.log("Error response received:");
                            console.log(data);
                            alert("Error updating session.  Your change was not saved.");
                        }
                    },
                    error: function(xhr, desc, err) {
                        console.log(xhr);
                        console.log("Details: " + desc + "\nError:" + err);
                        alert("Error updating session.  Your change was not saved.");
                    }
                });  // end ajax call
            });
            
                        
            $('#btnCancelCloseProject').button().click(function() {
                $('#dlgConfirmCloseProject').dialog('close');
            });
            
            $('#dlgAddJournal').dialog({
                autoOpen: false,
                title: 'Add/Edit Journal Entry',
                width: 515,
                modal : true,
                close: function() {
                    $('#inpJournalId').val("");
                    $('#inpJournalDate').val("");
                    $('#selJournalType').val("");
                    $('#taJournalNotes').val("");
                }
            });
            
            $('#btnAddJournal').click(function (){
                $('#dlgAddJournal').dialog('open');
            });
            
            $('.btnEditJournal').click(function (){
                entryId = this.id.split("-")[1];
                $('#inpJournalId').val(entryId);
                $('#inpJournalDate').val($('#journal-entry-' + entryId + ' .date').text());
                var optionText = $('#journal-entry-' + entryId + ' .eventDescription').text();
                $("#selJournalType option").each(function() {
                    if ($(this).text().trim() == optionText.trim()) {
                        $(this).attr('selected', 'selected');
                    }
                });
                $('#taJournalNotes').text($('#journal-entry-' + entryId + ' .notes').text());
                $('#dlgAddJournal').dialog('open');
            });
                        
            $('#btnJournalSave').button().click(function() {
               $.ajax({
                    url: 'ProjectAddJournal',
                    type: 'post',
                    data: {
                        projectId: #if(project.ProjectID) { #(project.ProjectID) }else{ -1 },
                        eventDate: $('#inpJournalDate').val(),
                        eventId: $('#selJournalType').val(),
                        notes: $('#taJournalNotes').val(),
                        journalId : $('#inpJournalId').val()
                    },
                    success: function(data, status) {
                        if(data == "ok") {
                            window.location.href="/ProjectAddEdit?projectId=#(project.ProjectID)";
                        }
                        else {
                            console.log("Error response received:");
                            console.log(data);
                            alert("Error updating session.  Your change was not saved.");
                        }
                    },
                    error: function(xhr, desc, err) {
                        console.log(xhr);
                        console.log("Details: " + desc + "\nError:" + err);
                        alert("Error updating session.  Your change was not saved.");
                    }
                });  // end ajax call 
            });
            
            $('#btnJournalCancel').button().click(function() {
                $('#dlgAddJournal').dialog('close');
            }); 
            
            $('#inpJournalDate').bind('keyup change', function() {
                enableDisable($('#btnJournalSave'), $('#inpJournalDate'));
            });
            enableDisable($('#btnJournalSave'), $('#inpJournalDate')); 
            
            
            $('#dlgAddRates').dialog({
                autoOpen: false,
                title: 'Add Rate Schedule',
                width: 515,
                modal : true,
                close: function() {
                    $('#selRatePerson').val("");
                    $('#selRateSchedule').val("");
                }
            });
            
            $('#btnAddRates').click(function(){
                $('#dlgAddRates').dialog('open');
            });
            
            $('#btnRateCancel').button().click(function() {
                $('#dlgAddRates').dialog('close');
            });
            
            $('#btnRateSave').button().click(function() {
                $.ajax({
                    url: 'ProjectAddRate',
                    type: 'post',
                    data: {
                        projectId: #if(project.ProjectID) { #(project.ProjectID) }else{ -1 },
                        personId: $('#selRatePerson').val(),
                        rateScheduleId: $('#selRateSchedule').val(),
                        rateStartDate: $('#rateStartDate').val(),
                        rateEndDate: $('#rateEndDate').val()
                    },
                    success: function(data, status) {
                        if(data == "ok") {
                            window.location.href="/ProjectAddEdit?projectId=#(project.ProjectID)";
                        }
                        else {
                            console.log("Error response received:");
                            console.log(data);
                            alert("Error updating session.  Your change was not saved.");
                        }
                    },
                    error: function(xhr, desc, err) {
                        console.log(xhr);
                        console.log("Details: " + desc + "\nError:" + err);
                        alert("Error updating session.  Your change was not saved.");
                    }
                });  // end ajax call 
                
                $('#dlgAddRates').dialog('close');
            });
            
            
            
            
                      
        });
    </script>
 
</head>
<body>
    
    <h2>
        #if(project){ 
            Project:  #(project.ProjectDescription)
        } else { 
            Add New Project 
        }
    </h2>
    
    <form method="post" id="frmMain">    
        <div class="wrapper">
            <div class="grid-1-1"><label>Contract:</label>
                <select name="contractId">
                    #for(contract in lookup.contracts) {
                        <option value="#(contract.id)"  #if(contract.id == project.ContractID) { selected }>#(contract.name)</option>
                    }
                </select></div>
            <div class="grid-1-2"><label>Services For:</label>
                <select name="companyId">
                    #for(company in lookup.companies) {
                        <option value="#(company.id)" #if(company.id == project.ServicesForCompany) { selected }>#(company.name)</option>
                    }
                </select></div>
            <div class="grid-2-1"><label for="description">Description:</label><input value="#(project.ProjectDescription)" name="description" id="description" /></div>
            <div class="grid-2-2"><label>#:</label><input value="#(project.ProjectNumber)" name="projectNumber" /></div>
            <div class="grid-3-1"><label>Status:</label>
                <select name="statusId">
                    #for(status in lookup.projectStatuses) {
                        <option value="#(status.StatusID)" #if(status.StatusID == project.StatusID) { selected }>#(status.StatusDescription)</option>
                    }
                </select></div>
            <div class="grid-3-2"><label>Status Notes:</label><textarea name="notes">#(project.StatusNotes)</textarea></div>
            <div class="grid-4-1"><label>Bug Tracking ID:</label><input value="#(project.MantisProjectID)" type="number" name="mantisId">  <a href="#(buglink)" target="_blank">link</a></div>
            <div class="grid-4-3"><label>Hide Time Reporting:</label><input type="checkbox" #if(project.HideTimeReporting) { checked } name="hideTimeReporting"></input></div>
                
            <div class="underline-1">&nbsp;</div>

            <div class="grid-5-1"><label>Projected Time:</label><input value="#(project.ProjectedTime)" name="projectedTime"></div>
            <div class="grid-5-2"><label>Actual Time:</label><span class="read-only">#(totalTime.TotalTime)</span></div>
            <div class="grid-5-3"><div id="chartProgress"></div></div>
        
            <div class="grid-6-1"><label>Start Date:</label><input value="#date(project.StartDate, "MM/dd/yyyy")" name="startDate" class="datepicker"></div>
            <div class="grid-6-2"><label>Projected End Date:</label><input value="#date(project.ProjectedDateComplete, "MM/dd/yyyy")" name="endDate" class="datepicker""></div>
            <div class="underline-2">&nbsp;</div>
        </div>
        
        <input style="display:none" value="#(project.ProjectID)" name="projectId">
    </form>
    <div>
        <button id="btnSave">Save</button>
        #if(project.ProjectID) {<button id="btnCloseProject">Close Project</button>}
    </div>

        
    #if(project){ 
                
        <div class="journal-section">
            <h3>Journal <button id="btnAddJournal" class="btnLittleHeader">+</button></h3>
    
            #for(journal in journals) {
        
                <div class="journal-entry 
                    #if(journal.EventWhoGenerates){
                        #lowercase(journal.EventWhoGenerates) 
                    }else{
                        user
                    }
                " id="journal-entry-#(journal.id)">
                    <div class="journal-head">
                        <span class="date">#date(journal.ReportDate, "M/d/yyyy")</span> by 
                        <span class="person">#(journal.Name)</span>
                        #if(journal.EventWhoGenerates != "SYSTEM"){
                            <button class="btnLittleHeader btnEditJournal" id="btnEditJournal-#(journal.id)"><img src="/images/edit-ben.png" alt="e"></button>
                        }
                    </div>
                    #if(journal.EventDescription) { <div class="eventDescription"> #(journal.EventDescription) </div> }
                    #if(journal.Notes) { <div class="notes"> #(journal.Notes) </div> }
                </div>
            }
        </div>
        
        <div class="rates-section"><h3>Rates <button id="btnAddRates" class="btnLittleHeader">+</button></h3>
            <table>
            <thead><tr><th>Person</th><th>Rate Schedule</th><th>Start</th><th>End</th></thead>
            #for(rateList in rateLists) {
                <tr><td>#(rateList.Name)</td>
                    <td>#(rateList.RateDescription)</td>
                    <td>#date(rateList.StartDate, "MM/dd/yyyy")</td>
                    <td>#date(rateList.StartDate, "MM/dd/yyyy")</td>
                </tr>
            }
            </table>
        </div>
    
            
        <div id="dlgConfirmCloseProject">
            <p>Are you sure you want to close the project `#(project.ProjectDescription)` ?  This will also mark all time billing items for the project as billed and paid.</p>
            <button id="btnConfirmCloseProject">Yes<br>Close the project.</button>
            <button id="btnCancelCloseProject">No<br>Cancel this request.</button>
        </div>
    
        <div id="dlgAddJournal">
            <div>
                <div><label>Date:</label><input id="inpJournalDate" class="datepicker"></div>
                <div><label>Type (optional):</label><select id="selJournalType">
                    <option value=""></option>
                    #for(eventType in lookup.eventTypes) {
                        <option value="#(eventType.id)">#(eventType.name)</option>
                    }</div>
                <select>
            </div>
            <div><label>Notes:</label><textarea id="taJournalNotes"></textarea></div>
            <div style="display:none"><input name="inpJournalIventId" id="inpJournalId" value="#(project.id)"></div>
            <div>
                <button id="btnJournalSave">Save</button>
                <button id="btnJournalCancel">Cancel</button>
            </div>
        </div>
        
        <div id="dlgAddRates">
            <div><label>Person:</label>
                <select id="selRatePerson">
                    #for(person in lookup.timeBillers){
                        <option value="#(person.PersonID)">#(person.Name)</option>
                    }
                </select>
            </div>
            <div><label>Rate Schedule:</label>
                <select id="selRateSchedule">
                    #for(rateSchedule in lookup.rateSchedules){
                        <option value="#(rateSchedule.RateScheduleID)">#(rateSchedule.RateDescription)</option>
                    }
                </select>
            </div>
            <div><label>Start Date (optional):</label><input id="rateStartDate" class="datepicker"></div>
            <div><label>End Date (optional):</label><input id="rateEndDate" class="datepicker"></div>
             <div>
                <button id="btnRateSave">Save</button>
                <button id="btnRateCancel">Cancel</button>
            </div>
        </div>
        
    }        
        



    <script>
        Highcharts.chart('chartProgress', {

            chart: {
                type: 'solidgauge',
                backgroundColor: "#f5f8f9",
            },

            title: {
                text: 'Completion   ',
                style: {
                    fontSize: '10pt',
                    fontWeight: 'bold'
                }
            },

            tooltip: {
                enabled: false  
            },

            pane: {
                startAngle: 0,
                endAngle: 360,
                background: [{ // Track for Move
                    outerRadius: '112%',
                    innerRadius: '88%',
                    
                    borderWidth: 0
                }, { // Track for Exercise
                    outerRadius: '87%',
                    innerRadius: '63%',
                    backgroundColor: Highcharts.Color(Highcharts.getOptions().colors[1])
                        .setOpacity(0.3)
                        .get(),
                    borderWidth: 0
                }]
            },

            yAxis: {
                min: 0,
                max: 100,
                lineWidth: 0,
                tickPositions: []
            },

            plotOptions: {
                solidgauge: {
                    dataLabels: {
                        enabled: false
                    },
                    linecap: 'round',
                    stickyTracking: false,
                    rounded: true
                }
            },

            series: [{
                name: 'Outer: By Date',
                data: [{
                    color: "orange",
                    radius: '112%',
                    innerRadius: '88%',
                    y: #(totalTime.CompletionByDate)
                }],
                showInLegend: true
            }, {
                name: 'Inner: By Time',
                data: [{
                    color: "purple",
                    radius: '87%',
                    innerRadius: '63%',
                    y: #(totalTime.CompletionByTime)
                }],
                showInLegend: true
            }],
            
            legend: { 
                enabled: true,
                layout: "vertical",
                align: 'right',
                verticalAlign: 'middle',
                itemStyle: {"color": "#333333", "cursor": "pointer", "fontSize": "10pt", "fontWeight": "normal", "textOverflow": "ellipsis"},
                itemDistance: 20,
            },
   
            credits: { enabled: false }
        });
    </script>


</body>
</html>
